#      __                                         ____
#     / /_____ ___  __  ___  __ _________  ____  / __/
#    / __/ __ `__ \/ / / / |/_// ___/ __ \/ __ \/ /_  
#  _/ /_/ / / / / / /_/ />  <_/ /__/ /_/ / / / / __/  
# (_)__/_/ /_/ /_/\__,_/_/|_(_)___/\____/_/ /_/_/     

# Correct vim colors in tmux
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",alacritty:Tc"

set -s escape-time 0 # Fix vim escape key delay

unbind C-b
set -g prefix C-Space # Bind prefix key to C-space 
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf" # Bind r to reload

set -g mouse on # Mouse mode

unbind v
unbind h

unbind % # Split vertically
unbind '"' # Split horizontally

bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# Vim keys to navigate panes
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

set -g history-limit 100000

# Windows 
unbind n
unbind w

bind n command-prompt "rename-window '%%'"
bind w new-window -c "#{pane_current_path}"

set -g base-index 1
set-window-option -g pane-base-index 1

bind -n M-j previous-window
bind -n M-k next-window

set-window-option -g mode-keys vi

# Status bar.
set-option -g renumber-windows on
set-option -g status-interval 30
set-option -g status-style 'bg=#303537,fg=#DBDBDB'
set-option -g status-left-length 40
set-option -g status-left '#[fg=#7D8FA3,bold]#S âŸ‘ '
set-option -g status-right "#[fg=#B6B6B6,bold]$USER #[fg=#7D8FA3,bold] %R "   
set-option -g window-status-current-format '[#I:#W]'
set-option -g window-status-current-style 'fg=#CC6666'
set-option -g window-status-format '#I:#W'
#95B47B

# Vim keybindings in copy mode
unbind -T copy-mode-vi Space;
unbind -T copy-mode-vi Enter;

bind -T copy-mode-vi v send-keys -X begin selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(disff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

